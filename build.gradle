buildscript {
    // define dependency versions for this project
    ext.deps = [
            androidX: [
                    annotation           : '1.0.0',
                    appCompat            : '1.0.2',
                    fragment             : '1.0.0',
                    loader               : '1.0.0',
                    localBroadcastManager: '1.0.0',
            ],
            eventbus: '3.0.0',
            timber  : '4.7.1'
    ]

    repositories {
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}
plugins {
    id 'digital.wup.android-maven-publish' version '3.6.2' apply false
}

subprojects {
    apply plugin: 'com.android.library'

    group 'me.thekey.android'
    version = '3.0.1-SNAPSHOT'

    repositories {
        google()
        jcenter()
        mavenLocal()
    }

    beforeEvaluate {
        android {
            compileSdkVersion 28

            defaultConfig {
                minSdkVersion 14
                targetSdkVersion 28
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            dexOptions {
                preDexLibraries !project.hasProperty('disablePreDex')
            }
        }

        dependencies {
            compileOnly "androidx.annotation:annotation:${deps.androidX.annotation}"
            compileOnly "org.jetbrains:annotations:17.0.0"
        }
    }

    // configure checkstyle
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion '7.8.2'
    }
    task checkstyle(type: Checkstyle) {
        configFile rootProject.file('config/checkstyle/checkstyle.xml')
        source 'src'
        include '*/java/**/*.java'
        ignoreFailures false
        showViolations true

        classpath = files()
    }
    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    // configure publishing
    apply plugin: 'digital.wup.android-maven-publish'
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
    }
    publishing {
        publications {
            release(MavenPublication) {
                from components.android
                pom.withXml {
                    def scm = asNode().appendNode('scm')
                    scm.appendNode('connection', POM_SCM_CONNECTION)
                    scm.appendNode('developerConnection', POM_SCM_CONNECTION)
                }

                artifact sourcesJar {
                    classifier 'sources'
                }
            }
        }
        repositories {
            maven {
                if (project.version.endsWith('-SNAPSHOT')) {
                    url "https://cruglobal.jfrog.io/cruglobal/list/maven-cru-android-public-snapshots-local/"
                } else {
                    url "https://cruglobal.jfrog.io/cruglobal/list/maven-cru-android-public-releases-local/"
                }

                credentials {
                    username cruGlobalMavenRepositoryUsername
                    password cruGlobalMavenRepositoryPassword
                }
            }
        }
    }
}
