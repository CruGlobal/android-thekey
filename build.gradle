buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

// define dependency versions for this project
ext.deps = [
        androidSupport: '27.1.1',
        timber        : '4.7.0'
]

subprojects {
    apply plugin: 'com.android.library'

    group 'me.thekey.android'
    version = '2.0.0-SNAPSHOT'

    repositories {
        mavenLocal()
        jcenter()
        google()
        maven {
            name "maven.gcx.org"
            url "https://maven.gcx.org/"
            credentials {
                username gcxMavenRepositoryUsername
                password gcxMavenRepositoryPassword
            }
        }
    }

    beforeEvaluate {
        android {
            compileSdkVersion 27

            defaultConfig {
                minSdkVersion 14
                targetSdkVersion 27
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_7
                targetCompatibility JavaVersion.VERSION_1_7
            }
            dexOptions {
                preDexLibraries !project.hasProperty('disablePreDex')
            }
        }

        dependencies {
            compileOnly "com.android.support:support-annotations:${deps.androidSupport}"
        }
    }

    // configure checkstyle
    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion '7.8.2'
    }
    task checkstyle(type: Checkstyle) {
        configFile rootProject.file('config/checkstyle/checkstyle.xml')
        source 'src'
        include '*/java/**/*.java'
        ignoreFailures false
        showViolations true

        classpath = files()
    }
    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }

    // configure maven uploadArchives task
    apply from: "$rootProject.projectDir/maven_publish.gradle"
    afterEvaluate { project ->
        artifacts {
            archives artifactSourcesJar
            archives artifactJavadocJar
        }
    }
}
